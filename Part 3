def hill_valley_rnn_model(dataset_filepath):
    testHillValleyGenerator = HillValleyDataGenerator(dataset_filepath + '/Hill_Valley_with_noise_Testing.data', 20)
    trainingHillValleyGenerator = HillValleyDataGenerator(dataset_filepath + '/Hill_Valley_with_noise_Training.data',
                                                          20)

    model = keras.Sequential([
        keras.layers.InputLayer(input_shape=(606, 100)),
        keras.layers.LSTM(256),
        keras.layers.Dense(256, activation="sigmoid")
    ])

    model.compile(loss="binary_crossentropy", optimizer="adam", metrics=["accuracy"])
    training_performance = model.evaluate(trainingHillValleyGenerator, verbose=0)
    validation_performance = model.evaluate(testHillValleyGenerator, verbose=0)
    return model, training_performance, validation_performance
